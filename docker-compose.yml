services:
  econoris-db:
    build:
      context: ./Database
      dockerfile: Dockerfile
    image: econoris-db:latest
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./Database:/docker-entrypoint-initdb.d
    networks:
      - econoris-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} || exit 1"]
      interval: 5s
      timeout: 30s
      retries: 5

  econoris-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: econoris-server:latest
    restart: always
    environment:
      APP_NAME: ${APP_NAME}
      APP_PORT: ${APP_PORT}
      HOST_NAME: ${HOST_NAME}
      BASE_URL: ${BASE_URL}
      APP_ENV: ${APP_ENV}

      DB_SCHEME: ${DB_SCHEME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}

      HASH_ALGORITHM: ${HASH_ALGORITHM}
      HASH_ROUNDS: ${HASH_ROUNDS}

      HANDSHAKE_STATIC_TOKEN: ${HANDSHAKE_STATIC_TOKEN}
      AUTH_APP_URL: ${AUTH_APP_URL}
      AUTH_APP_HANDSHAKE_URL: ${AUTH_APP_HANDSHAKE_URL}
    depends_on:
      econoris-db:
        condition: service_healthy
    networks:
      - econoris-net
      - flower_garden-net
    ports:
      - ${APP_PORT}:80

volumes:
  db_data:

networks:
  econoris-net:
    driver: bridge
  flower_garden-net:
    external: true
