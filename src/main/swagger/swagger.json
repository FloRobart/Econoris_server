{
    "openapi": "3.0.0",
    "info": {
        "title": "Ã‰conoris API",
        "version": "2.0.0",
        "description": "API documentation"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/operations": {
            "get": {
                "summary": "Get all operations",
                "description": "Get all operations; You can filter the results with the parameters in the query string",
                "tags": [
                    "Operations"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the number of results",
                        "required": false,
                        "example": 10,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Offset the results",
                        "required": false,
                        "example": 0,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of operations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/OperationResponseBody"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No results found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/OperationResponseBodyEmpty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Change your request for to fix this error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Please create an issue on Github",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationResponseBodyEmpty"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create one or multiple operations",
                "tags": [
                    "Operations"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "operations",
                        "description": "Operations to create. One array = One operation",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/OperationRequestBodyCreate"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operations created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#components/schemas/Operations"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Change your request for to fix this error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Please create an issue on Github",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update one or multiple operations",
                "tags": [
                    "Operations"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "operations",
                        "description": "Operations to update.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OperationRequestBodyUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operations updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#components/schemas/Operations"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No operations updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "example": []
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Change your request for to fix this error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Please create an issue on Github",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete operations",
                "tags": [
                    "Operations"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "operations",
                        "description": "Operations to delete",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OperationRequestBodyDelete"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operations deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#components/schemas/Operations"
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No operations deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "example": []
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Change your request for to fix this error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Please create an issue on Github",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operation/{id}": {
            "get": {
                "summary": "Get operation with id",
                "tags": [
                    "Operations"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of the operation",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the number of results",
                        "required": false,
                        "example": 10,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Offset the results",
                        "required": false,
                        "example": 0,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of operations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/OperationResponseBody"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No results found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/OperationResponseBodyEmpty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Change your request for to fix this error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Please create an issue on Github",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationResponseBodyEmpty"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operations/get": {
            "post": {
                "summary": "Get all operations corresponding at parameters passed in body of the request",
                "tags": [
                    "Operations"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "schema": {
                            "$ref": "#/components/schemas/OperationRequestBodySelect"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of operations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/OperationResponseBody"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No results found in database",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/OperationResponseBodyEmpty"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Change your request for to fix this error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Please create an issue on Github",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationResponseBodyEmpty"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/operation": {
            "post": {
                "summary": "Create only one operation",
                "tags": [
                    "Operations"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "operations",
                        "description": "Operation to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OperationRequestBodyCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operations created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#components/schemas/Operations"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request. Change your request for to fix this error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Please create an issue on Github",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Tables": {
                "type": "string",
                "enum": [
                    "operations",
                    "loans",
                    "timetable"
                ],
                "example": "operations"
            },
            "Operations": {
                "type": "object",
                "properties": {
                    "operations_id": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "operations_date": {
                        "type": "string",
                        "example": "2023-09-30T22:00:00.000Z"
                    },
                    "operations_name": {
                        "type": "string",
                        "example": "Operation A"
                    },
                    "operations_amount": {
                        "type": "number",
                        "example": 100.5
                    },
                    "operations_source": {
                        "type": "string",
                        "example": "Source A"
                    },
                    "operations_dest": {
                        "type": "string",
                        "example": "Dest A"
                    },
                    "operations_costs": {
                        "type": "number",
                        "example": 10
                    },
                    "operations_categ": {
                        "type": "string",
                        "example": "Category A"
                    },
                    "operations_validated": {
                        "type": "boolean",
                        "example": true
                    },
                    "operations_redundancy": {
                        "type": "string",
                        "example": "???"
                    },
                    "operations_createdat": {
                        "type": "string",
                        "example": "2023-09-31T22:00:00.000Z"
                    }
                }
            },
            "OperationRequestBodySelect": {
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "date",
                                "name",
                                "amount",
                                "source",
                                "dest",
                                "costs",
                                "categ",
                                "validated",
                                "redundancy",
                                "operations_id",
                                "operations_date",
                                "operations_name",
                                "operations_amount",
                                "operations_source",
                                "operations_dest",
                                "operations_costs",
                                "operations_categ",
                                "operations_validated",
                                "operations_redundancy"
                            ]
                        }
                    },
                    "aggregation": {
                        "type": "string",
                        "enum": [
                            "SUM",
                            "AVG",
                            "COUNT",
                            "MIN",
                            "MAX"
                        ],
                        "example": "SUM"
                    },
                    "limit": {
                        "type": "integer"
                    },
                    "offset": {
                        "type": "integer"
                    },
                    "whereValues": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key",
                                "value"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "date",
                                        "name",
                                        "amount",
                                        "source",
                                        "dest",
                                        "costs",
                                        "categ",
                                        "validated",
                                        "redundancy",
                                        "operations_id",
                                        "operations_date",
                                        "operations_name",
                                        "operations_amount",
                                        "operations_source",
                                        "operations_dest",
                                        "operations_costs",
                                        "operations_categ",
                                        "operations_validated",
                                        "operations_redundancy"
                                    ]
                                },
                                "comparisonOperator": {
                                    "type": "string",
                                    "enum": [
                                        "=",
                                        "!=",
                                        "<>",
                                        "<",
                                        ">",
                                        "<=",
                                        ">=",
                                        "LIKE"
                                    ],
                                    "example": "="
                                },
                                "value": {
                                    "type": "string"
                                },
                                "logicalOperator": {
                                    "type": "string",
                                    "enum": [
                                        "AND",
                                        "OR"
                                    ],
                                    "example": "AND"
                                }
                            }
                        }
                    }
                }
            },
            "OperationRequestBodyCreate": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OperationsKeysValues"
                }
            },
            "OperationRequestBodyUpdate": {
                "type": "object",
                "required": [
                    "keys",
                    "whereValues"
                ],
                "properties": {
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperationsKeysValues"
                        }
                    },
                    "whereValues": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key",
                                "value"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "date",
                                        "name",
                                        "amount",
                                        "source",
                                        "dest",
                                        "costs",
                                        "categ",
                                        "validated",
                                        "redundancy",
                                        "operations_id",
                                        "operations_date",
                                        "operations_name",
                                        "operations_amount",
                                        "operations_source",
                                        "operations_dest",
                                        "operations_costs",
                                        "operations_categ",
                                        "operations_validated",
                                        "operations_redundancy"
                                    ]
                                },
                                "comparisonOperator": {
                                    "type": "string",
                                    "enum": [
                                        "=",
                                        "!=",
                                        "<>",
                                        "<",
                                        ">",
                                        "<=",
                                        ">=",
                                        "LIKE"
                                    ],
                                    "example": "="
                                },
                                "value": {
                                    "type": "string"
                                },
                                "logicalOperator": {
                                    "type": "string",
                                    "enum": [
                                        "AND",
                                        "OR"
                                    ],
                                    "example": "AND"
                                }
                            }
                        }
                    }
                }
            },
            "OperationRequestBodyDelete": {
                "$ref": "#/components/schemas/OperationsWhereValues"
            },
            "OperationResponseBody": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#components/schemas/Operations"
                        }
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "Description": "Description of the warnings -> action executed",
                            "example": "Logical operator : 'example' not in [AND,OR] for key : 'id' -> replaced by 'AND'"
                        }
                    },
                    "errors": {
                        "$ref": "#components/schemas/Error"
                    }
                }
            },
            "OperationResponseBodyEmpty": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "Description": "Description of the warnings -> action executed",
                            "example": "Logical operator : 'example' not in [AND,OR] for key : 'id' -> replaced by 'AND'"
                        }
                    },
                    "errors": {
                        "$ref": "#components/schemas/Error"
                    }
                }
            },
            "OperationsKeysValues": {
                "type": "object",
                "required": [
                    "key",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "enum": [
                            "date",
                            "name",
                            "amount",
                            "source",
                            "dest",
                            "costs",
                            "categ",
                            "validated",
                            "redundancy",
                            "operations_date",
                            "operations_name",
                            "operations_amount",
                            "operations_source",
                            "operations_dest",
                            "operations_costs",
                            "operations_categ",
                            "operations_validated",
                            "operations_redundancy"
                        ]
                    },
                    "value": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    }
                }
            },
            "OperationsWhereValues": {
                "type": "object",
                "required": [
                    "whereValues"
                ],
                "properties": {
                    "whereValues": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "key",
                                "value"
                            ],
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "date",
                                        "name",
                                        "amount",
                                        "source",
                                        "dest",
                                        "costs",
                                        "categ",
                                        "validated",
                                        "redundancy",
                                        "operations_id",
                                        "operations_date",
                                        "operations_name",
                                        "operations_amount",
                                        "operations_source",
                                        "operations_dest",
                                        "operations_costs",
                                        "operations_categ",
                                        "operations_validated",
                                        "operations_redundancy"
                                    ]
                                },
                                "comparisonOperator": {
                                    "type": "string",
                                    "enum": [
                                        "=",
                                        "!=",
                                        "<>",
                                        "<",
                                        ">",
                                        "<=",
                                        ">=",
                                        "LIKE"
                                    ],
                                    "example": "="
                                },
                                "value": {
                                    "type": "string"
                                },
                                "logicalOperator": {
                                    "type": "string",
                                    "enum": [
                                        "AND",
                                        "OR"
                                    ],
                                    "example": "AND"
                                }
                            }
                        }
                    }
                }
            },
            "Loans": {
                "type": "object",
                "properties": {
                    "loans_id": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "loans_date": {
                        "type": "string",
                        "example": "2023-09-30T22:00:00.000Z"
                    },
                    "loans_borrower": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "loans_amount": {
                        "type": "string",
                        "example": "1000.00"
                    },
                    "loans_refundedamount": {
                        "type": "string",
                        "example": "500.00"
                    },
                    "loans_loanreason": {
                        "type": "string",
                        "example": "Loan reason"
                    },
                    "loans_createdat": {
                        "type": "string",
                        "example": "2023-09-30T22:00:00.000Z"
                    }
                }
            },
            "Timetable": {
                "type": "object",
                "properties": {
                    "timetable_id": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "timetable_timetabledate": {
                        "type": "string",
                        "example": "2023-09-30T22:00:00.000Z"
                    },
                    "timetable_hoursnumber": {
                        "type": "???"
                    },
                    "timetable_hourlyrate": {
                        "type": "???"
                    },
                    "timetable_createdat": {
                        "type": "???"
                    }
                }
            },
            "Error": {
                "type": "array",
                "items": {
                    "type": "string",
                    "example": "???"
                }
            }
        }
    },
    "tags": [
        {
            "name": "Operations",
            "description": "All about Operations"
        },
        {
            "name": "Loans",
            "description": "All about Loans"
        }
    ]
}